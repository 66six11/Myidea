"use strict";var L=Object.defineProperty;var x=(n,i,t)=>i in n?L(n,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[i]=t;var h=(n,i,t)=>x(n,typeof i!="symbol"?i+"":i,t);const y=require("siyuan");function D(n){const i=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(n){for(const t in n)if(t!=="default"){const e=Object.getOwnPropertyDescriptor(n,t);Object.defineProperty(i,t,e.get?e:{enumerable:!0,get:()=>n[t]})}}return i.default=n,Object.freeze(i)}const m=D(y),S=(n="custom-icon-style")=>{const i=(s,a)=>`
.protyle-wysiwyg [data-node-id] span[data-type~='a'][data-href *="${s}"]:not(:empty)::before,
.protyle-wysiwyg [data-node-id] span[data-type~='url'][data-href *="${s}"]:not(:empty)::before,
.protyle-wysiwyg [data-node-id] a[href *="${s}"]::before,
.b3-typography a[href *="${s}"]::before{
    content: "";
    background-image: url('${a}');
}
`;let t={};const e=s=>{const a=document.getElementById(n);if(a)a.innerHTML=s;else{const d=document.createElement("style");d.id=n,d.innerHTML=s,document.head.appendChild(d)}},o=()=>{const s=document.getElementById(n);s&&s.remove()},c=()=>{let s="";for(const a in t){const d=t[a];s+=d+`
`}e(s)};return{addIcon:(s,a,d=!0)=>{const p=i(s,a);t[s]=p,d&&c()},removeAllIcons:()=>{t={}},clearStyle:o,flushStyle:c}},k=(n,i,t,e)=>{let o=new FormData;return o.append("path",n),o.append("isDir",i.toString()),o.append("modTime",Math.floor(Date.now()/1e3).toString()),t instanceof Blob&&!e?o.append("file",t):o.append("file",new Blob([t],{type:"application/octet-stream"})),o},$=async n=>{const i=n.name;let t=`/data/public/custom-link-icons/${i}`;const e=k(t,!1,n);return await fetch("/api/file/putFile",{method:"POST",body:e}),`/public/custom-link-icons/${i}`},C=n=>{const i=document.createElement("div");i.className="custom-icon-upload",i.innerHTML=`
        <h3>Upload Custom Icon</h3>
        <div class="input-group">
            <label for="website-href">Website URL:</label>
            <input type="text" id="website-href" placeholder="e.g., example.com">
        </div>
        <div class="input-group">
            <label for="icon-file">Select Icon:</label>
            <input type="file" id="icon-file" accept=".png,.jpg,.svg,.ico">
        </div>
        <div id="file-preview"></div>
        <button id="upload-button" class="b3-button" disabled>Upload Icon</button>
    `;const t=i.querySelector("#website-href"),e=i.querySelector("#icon-file"),o=i.querySelector("#file-preview"),c=i.querySelector("#upload-button"),r=()=>{c.disabled=!(t.value.trim()&&e.files&&e.files.length>0)};return t.addEventListener("input",r),e.addEventListener("change",()=>{if(r(),o.innerHTML="",e.files&&e.files[0]){const l=e.files[0];if(l.type.startsWith("image/")){const s=document.createElement("img");s.src=URL.createObjectURL(l),s.style.maxWidth="100px",s.style.maxHeight="100px",o.appendChild(s)}else o.textContent=`File selected: ${l.name}`}}),c.addEventListener("click",async()=>{if(e.files&&e.files[0]){const l=e.files[0];try{const s=await $(l);n(t.value.trim(),s),y.showMessage("Icon uploaded successfully!"),t.value="",e.value="",o.innerHTML="",r()}catch(s){console.error("Upload failed:",s),y.showMessage("Upload failed. Please try again.")}}}),i},_=(n,i,t)=>{const e=document.createElement("div");e.className="custom-icon-manager",n=[...n],Object.assign(e.style,{display:"flex",flexDirection:"column",flex:1,padding:"0 20px",gap:"15px"});const o=[],c=(s,a)=>{const d=document.createElement("div");d.className="custom-icon-item",Object.assign(d.style,{display:"flex",gap:"15px",alignItems:"center"}),d.innerHTML=`
            <img src="${s.iconUrl}" alt="Custom Icon" class="custom-icon-preview" style="height: 25px;">
            <input type="text" class="custom-icon-href" value="${s.href}" style="flex: 1;">
            <button class="custom-icon-delete b3-button b3-button--outline">Delete</button>
        `;const p=d.querySelector(".custom-icon-href"),w=d.querySelector(".custom-icon-delete");return p.addEventListener("change",()=>{n[a].href=p.value}),w.addEventListener("click",()=>{const E=n[a];o.push(E.iconUrl),n.splice(a,1),d.remove()}),d};(()=>{e.innerHTML="",n.forEach((s,a)=>{e.appendChild(c(s,a))})})();const l=document.createElement("button");return l.className="b3-button b3-button--text",l.textContent="Save Changes",l.addEventListener("click",async()=>{i([...n]);let s=[];for(const a of o)s.push(fetch("/api/file/removeFile",{method:"POST",body:JSON.stringify({path:`/data${a}`})}));await Promise.all(s),t(),y.showMessage("Custom icons updated successfully!")}),e.appendChild(l),e},f="plugin-link-icon",b="loaded-protyle-static";async function U(n,i){let t=await m.fetchSyncPost(n,i);return t.code===0?t.data:null}async function j(n){return U("/api/query/sql",{stmt:n})}async function q(n){let i=await j(`select * from blocks where id = '${n}'`);if((i==null?void 0:i.length)===0||i[0].type!=="d")return null;let t=await m.fetchSyncPost("/api/block/getDocInfo",{id:n});if(t.code!==0)return null;let e=t.data.icon,o=t.data.subFileCount;if(e===""){let r=o>0?"ðŸ“‘":"ðŸ“„";return{type:"unicode",dom:`<span data-type="text" class="${f}">${r}</span>`,code:r}}let c={type:"unicode",dom:"",code:e};return e.toLowerCase().endsWith(".svg")?(c.type="svg",c.dom=`<img alt="${e}" class="emoji ${f}" src="/emojis/${e}" title="${e}">`):e.toLowerCase().match(/\.(jpeg|jpg|png)$/)?(c.type="image",c.dom=`<img alt="${e}" class="${f}" src="/emojis/${e}" title="${e}" style="width: 1.625em; height: 1.625em; padding-right: 3px; padding-bottom:3px; border-radius: 0.5em">`):(c.type="unicode",c.code=String.fromCodePoint(parseInt(e,16)),c.dom=`<span data-type="text" class="${f}">${c.code}</span>`),c}function T(n){return new RegExp("\\p{Emoji}","u").test(n)}const I="config.json",g="custom-icons.json",v=n=>{const i=new m.Dialog({title:n.title,content:'<div class="dialog-content" style="display: flex; height: 100%;"/>',width:n.width,height:n.height,destroyCallback:n.callback});return i.element.querySelector(".dialog-content").appendChild(n.ele),i},u=S();class B extends m.Plugin{constructor(){super(...arguments);h(this,"Listener",this.listeners.bind(this));h(this,"config",{InsertDocRefIcon:!0,InsertDocLinkIcon:!1});h(this,"customIcons",[])}async onload(){this.initUI();let t=await this.loadData(I),e=await this.loadData(g);if(this.customIcons=e||[],t)for(let o in this.config){let c=t==null?void 0:t[o];c!==void 0&&(this.config[o]=c)}this.customIcons.forEach(o=>{u.addIcon(o.href,o.iconUrl,!1)}),u.flushStyle(),this.eventBus.on(b,this.Listener)}async onunload(){this.eventBus.off(b,this.Listener),u.clearStyle()}initUI(){const t=document.createElement("input");t.type="checkbox",t.className="b3-switch fn__flex-center";const e=document.createElement("input");e.type="checkbox",e.className="b3-switch fn__flex-center";const o=document.createElement("button");o.className="b3-button fn__size200",o.textContent=this.i18n.upload,o.addEventListener("click",async()=>{let r=C((s,a)=>{l.destroy(),this.onCustomIconUpload(s,a)});const l=v({title:this.i18n.upload,ele:r,width:"700px"})});const c=document.createElement("button");c.className="b3-button fn__size200",c.textContent=this.i18n.manage,c.addEventListener("click",async()=>{let r=_(this.customIcons,s=>{console.debug(`Updated custom icons: ${s}`),this.customIcons=s,u.removeAllIcons(),this.customIcons.forEach(a=>{u.addIcon(a.href,a.iconUrl,!1)}),u.flushStyle(),this.saveData(g,this.customIcons)},()=>{l.destroy()});const l=v({title:this.i18n.manage,ele:r,width:"400px"})}),this.setting=new m.Setting({width:"700px",height:"500px",confirmCallback:()=>{this.config.InsertDocRefIcon=t.checked,this.config.InsertDocLinkIcon=e.checked,this.saveData(I,this.config)}}),this.setting.addItem({title:this.i18n.InputDocRef.title,description:this.i18n.InputDocRef.description,createActionElement:()=>(t.checked=this.config.InsertDocRefIcon,t)}),this.setting.addItem({title:this.i18n.InputDocLink.title,description:this.i18n.InputDocLink.description,createActionElement:()=>(e.checked=this.config.InsertDocLinkIcon,e)}),this.setting.addItem({title:this.i18n.upload,createActionElement:()=>o}),this.setting.addItem({title:this.i18n.manage,createActionElement:()=>c})}onCustomIconUpload(t,e){console.debug(`Upload custom icon: ${t} -> ${e}`),u.addIcon(t,e),this.customIcons.push({href:t,iconUrl:e}),this.saveData(g,this.customIcons)}async listeners(t){var o,c;let e=(c=(o=t.detail)==null?void 0:o.protyle)==null?void 0:c.element;if(!e){console.warn("Listener failed to get protyle element");return}this.config.InsertDocRefIcon&&e.querySelectorAll("span[data-type='block-ref']").forEach(async l=>{let s=l.attributes["data-id"].value;this.insertDocIconBefore(l,s)}),this.config.InsertDocLinkIcon&&e.querySelectorAll("span[data-type=a][data-href^=siyuan]").forEach(async l=>{let s=l.attributes["data-href"].value;const a=new RegExp("siyuan:\\/\\/blocks\\/(.*)"),d=s.match(a);if(d){const p=d[1];this.insertDocIconBefore(l,p)}})}async insertDocIconBefore(t,e){var l;let o=t.previousElementSibling;if(o!==null&&((l=o==null?void 0:o.classList)!=null&&l.contains(f)))return!1;let c=o==null?void 0:o.innerText;if(T(c))return!0;let r=await q(e);return r===null?!1:r.type==="unicode"&&r.code===(c==null?void 0:c.trim())?(o.classList.add(f),!0):(t.insertAdjacentHTML("beforebegin",r.dom),!0)}}module.exports=B;
